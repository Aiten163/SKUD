version: '3.2'
services:
  nginx:
      restart: always
      build:
          context: ./docker/nginx
          dockerfile: Dockerfile
      volumes:
          - ./:/var/www
          - ./certs:/etc/letsencrypt
      environment:
          - "DB_PORT=3306"
          - "DB_HOST=mysql"
          - "XDG_CONFIG_HOME=/app"
      ports:
          - "80:80"
          - "443:443"
      links:
          - php-fpm
          - node
      command: /bin/sh -c "if [ ! -f /etc/letsencrypt/live/xn--d1aluj.xn--80aa4alnee.xn--p1acf/fullchain.pem ]; then certbot certonly --standalone --non-interactive --agree-tos --email uuum1984@mail.ru -d xn--d1aluj.xn--80aa4alnee.xn--p1acf; fi && nginx -g 'daemon off;'"

  php-fpm:
    restart: always
    build:
      context: ./docker/php-fpm
      dockerfile: Dockerfile
    volumes:
      - ./:/var/www
    environment:
      - "DB_PORT=3306"
      - "DB_HOST=mysql"
      - "REDIS_PORT=6379"
      - "REDIS_HOST=redis"
    links:
      - redis
      - mysql
      - node

  php-cli:
    restart: always
    build:
      context: ./
      dockerfile: docker/php-cli.docker
    volumes:
    - ./:/var/www
    environment:
      - "DB_PORT=3306"
      - "DB_HOST=mysql"
      - "REDIS_PORT=6379"
      - "REDIS_HOST=redis"
      - "COMPOSER_MEMORY_LIMIT=-1"
    links:
      - redis
      - mysql
    tty: true

  mysql:
      restart: always
      image: mysql:8.0
      volumes:
          - database:/var/lib/mysql
          - ./docker/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
      environment:
          - "MYSQL_ROOT_PASSWORD=secret"
          - "MYSQL_USER=user"
          - "MYSQL_PASSWORD=secret"
          - "MYSQL_DATABASE=laravel"
          - "TZ=Europe/Moscow"
      ports:
          - "33061:3306"
  phpmyadmin:
    restart: always
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      - PMA_HOST=mysql
      - PMA_USER=user
      - PMA_PASSWORD=secret
      - UPLOAD_LIMIT=64M
    ports:
      - 8081:80
  node:
    image: node:18-alpine
    ports:
        - "3000:3000"
    volumes:
    - ./:/var/www
    working_dir: /var/www
    tty: true
    command: >
        sh -c "npm install &&
               npm install --save-dev laravel-echo pusher-js &&
               npm run build &&
               npm run start"

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
        - "6379:6379"
    volumes:
        - redis:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]

volumes:
    database:
    redis:
