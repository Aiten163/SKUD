package main

import (
	"encoding/json"
	"fmt"
	"log"
	"net/http"
)

// —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ JSON
type Message struct {
	Text string `json:"text"`
}

// –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ GET-–∑–∞–ø—Ä–æ—Å–∞
func handleGet(w http.ResponseWriter, r *http.Request) {
	response := map[string]string{"message": "Hello from Go (GET)"}
	json.NewEncoder(w).Encode(response)
}

// –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ POST-–∑–∞–ø—Ä–æ—Å–∞
func handlePost(w http.ResponseWriter, r *http.Request) {
	var msg Message

	// —á–∏—Ç–∞–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø–∞—Ä—Å–∏–º JSON
	if err := json.NewDecoder(r.Body).Decode(&msg); err != nil {
		http.Error(w, "Invalid JSON", http.StatusBadRequest)
		return
	}

	fmt.Printf("üü¢ Received POST message: %s\n", msg.Text)

	response := map[string]string{"received": msg.Text}
	w.Header().Set("Content-Type", "application/json")
	json.NewEncoder(w).Encode(response)
}

func main() {
	http.HandleFunc("/get", handleGet)
	http.HandleFunc("/post", handlePost)

	port := ":8082"
	fmt.Println("üöÄ Go HTTP server started on http://localhost" + port)
	log.Fatal(http.ListenAndServe(port, nil))
}
